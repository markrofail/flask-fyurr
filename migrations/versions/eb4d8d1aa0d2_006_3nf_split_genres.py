"""006 3NF split genres

Revision ID: eb4d8d1aa0d2
Revises: ef915ab3a321
Create Date: 2020-10-10 19:23:07.905803

"""
import sqlalchemy as sa
from alembic import op

# revision identifiers, used by Alembic.
revision = "eb4d8d1aa0d2"
down_revision = "ef915ab3a321"
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###

    # create Genres table
    op.create_table(
        "genres",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
    )

    # create ManyToMany with artists
    op.create_table(
        "genre_artist_assoc",
        sa.Column("genre_id", sa.Integer(), nullable=True),
        sa.Column("artist_id", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(
            ["artist_id"],
            ["artists.id"],
        ),
        sa.ForeignKeyConstraint(
            ["genre_id"],
            ["genres.id"],
        ),
    )

    # create ManyToMany with venues
    op.create_table(
        "genre_venue_assoc",
        sa.Column("genre_id", sa.Integer(), nullable=True),
        sa.Column("venue_id", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(
            ["genre_id"],
            ["genres.id"],
        ),
        sa.ForeignKeyConstraint(
            ["venue_id"],
            ["venues.id"],
        ),
    )

    # remove old artists genre
    op.drop_column("artists", "genres")
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column(
        "artists",
        sa.Column("genres", sa.VARCHAR(length=120), autoincrement=False, nullable=True),
    )
    op.drop_table("genre_venue_assoc")
    op.drop_table("genre_artist_assoc")
    op.drop_table("genres")
    # ### end Alembic commands ###
